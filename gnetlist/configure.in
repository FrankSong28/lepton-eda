dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/gnetlist.c)

dnl Initialize automake stuff
PACKAGE=gEDA

# new way of doing version
VERSION=19990601

echo Configuring gnetlist version $VERSION

dnl --disable-strokes : turn off stroke support
AC_ARG_ENABLE(strokes,
    [  --disable-strokes       Include stroke support (don't use LibStroke at all)],
    [
	no_strokes=yes
    ])


dnl Change default location of gtk-config
AC_ARG_WITH(gtk-config, [  --with-gtk-config=path  Change where gtk-config is located], [opt_gtkconfig=$withval])

dnl Change default location for rc files
AC_ARG_WITH(rcdir, [  --with-rcdir=path       Change where the system-*rc files are installed], [opt_rcdir=$withval])

dnl Initialize automake stuff
dnl AM_INIT_AUTOMAKE($PACKAGE, $GEDA_VER_MAJOR.$GEDA_VER_MINOR.$GEDA_VER_MICRO, no-define)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Create a configuration header
AM_CONFIG_HEADER(config.h)

dnl Build time sanity check...
AM_SANITY_CHECK

dnl Initialize libtool libtool isn't really needed for gnetlist
AM_PROG_LIBTOOL

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
dnl AC_PROG_LEX
dnl AC_DECL_YYTEXT
AC_PROG_MAKE_SET

dnl Check for guile-config; use it to set 
dnl GUILE_INCLUDE and GUILE_LIB.
dnl Issue: Is it OK to include "-L" in GUILE_LIB?

AC_PATH_PROG(GUILE_CONFIG_PROG, guile-config)

if test ! -n "$GUILE_CONFIG_PROG" ; then
		AC_MSG_ERROR(Cannot find guile-config -- Install GUILE 1.3 and run ./configure again)
fi

	guile_incdir=`$GUILE_CONFIG_PROG info includedir`
	guile_libdir=`$GUILE_CONFIG_PROG info libdir`
	guile_libs=`$GUILE_CONFIG_PROG link`
	GUILE_INCLUDE="-I${guile_incdir}"
	GUILE_LIB="-L${guile_libdir} ${guile_libs}"

saved_cflags="$CFLAGS"
saved_ldflags="$LDFLAGS"

dnl Checks for header files.
AC_PATH_X
AC_PATH_XTRA

CFLAGS="$X_CFLAGS $CFLAGS"
LDFLAGS="$X_LDFLAGS $X_LIBS $LDFLAGS"
X_EXTRA_LIBS="$X_EXTRA_LIBS -lX11 -lm"

dnl Checks for X libraries.
AC_CHECK_LIB(X11, XOpenDisplay, X_LIBS="-lX11", X_LIBS=no, $X_EXTRA_LIBS)
AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="-lXext $X_LIBS", X_EXT=no, $X_EXTRA_LIBS)
dnl AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="-lXext $X_LIBS", XEXT=no, $X_EXTRA_LIBS)

	if test "$X_LIBS" = no; then
          AC_MSG_ERROR(Cannot find -lX11 library)
        fi

dnl AC_CHECK_LIB(fl, yywrap, LEXLIB="-lfl")
dnl Replace `main' with a function in -lm:
dnl AC_CHECK_LIB(m, main)

dnl Checking for rint in math library
AC_CHECK_LIB(m, rint, AC_DEFINE(HAS_RINT), no_RINT="yes")

dnl Checking for dynamic lib
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl", DL_LIB="")

dnl Check for tcl libraries
dnl TCL_EXTRA="$DL_LIB -lm"
dnl AC_CHECK_LIB(tcl8.0, Tcl_CreateInterp, TCL_LIB="-ltcl8.0", TCL_LIB="no", $TCL_EXTRA)

dnl 	if test "$TCL_LIB" = "no"; then
dnl
dnl 		dnl check again to see if it has another name (-ltcl)
dnl 		AC_CHECK_LIB(tcl, Tcl_CreateInterp, TCL_LIB="-ltcl", TCL_LIB="no", $TCL_EXTRA)
dnl
dnl 		if test "$TCL_LIB" = "no"; then
dnl 			TCL_LIB=
dnl 		else
dnl 			AC_DEFINE(HAS_TCL)
dnl 		fi
dnl
dnl 	else
dnl 		AC_DEFINE(HAS_TCL)
dnl 	fi

if eval "test x$opt_gtkconfig != x" ; then

	if test ! -r "$opt_gtkconfig"; then

		AC_MSG_ERROR(Cannot find $opt_gtkconfig -- be sure that this pathname is correct)

	else
		GTKCONFIG=$opt_gtkconfig
	fi
else
 	AC_PATH_PROG(GTKCONFIG, gtk-config, no, ${PATH})
fi


	if test $GTKCONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find gtk-config -- be sure that gtk >= 0.99.7 is installed)
	fi

# search for libgeda-config
AC_PATH_PROG(LIBGEDACONFIG, libgeda-config, no, ${PATH})

if test $LIBGEDACONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find libgeda-config -- be sure that libgeda is installed)
	fi

# search for libgeda-config
AC_PATH_PROG(GESYMCONFIG, gesym-config, no, ${PATH})

if test $GESYMCONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find gesym-config -- be sure that the symbols are installed)
	fi

LDEXTRA=
CFEXTRA=
GTK=
GDK=
GLIB=
X_LDFLAGS="`$LIBGEDACONFIG --libs` `$GTKCONFIG --libs`"
X_CFLAGS="`$GTKCONFIG --cflags` `$LIBGEDACONFIG --cflags`"
gtkversion=`$GTKCONFIG --version | cut -d. -f1,2`

AC_DEFINE_UNQUOTED(GTKVERSION, "$gtkversion")

dnl set a #define for a new version of gtk 
dnl and step the prototype.h files
if eval "test $gtkversion = '1.2'" ; then
	AC_DEFINE(GTK_DEVEL)

	echo Found GTK+ 1.2.x
#  ( cd src; rm -f prototype.h ; ln -f -s prototype1.2.h prototype.h )
else 
	echo Found GTK+ 1.0.x
   	AC_MSG_ERROR(GTK+ 1.0.x is no longer supported by gEDA, please upgrade to 1.2.x)
fi


dnl old way of doing this, see if new way works 
dnl CFLAGS="$CFLAGS $CFEXTRA `$GTKCONFIG --cflags`"

CFLAGS="`$GTKCONFIG --cflags` $CFLAGS $CFEXTRA"
LDFLAGS="$LDEXTRA `$GTKCONFIG --libs` -lgtk -lgdk -lglib $LDFLAGS -lm"

AC_MSG_CHECKING([for the rest of gtk])
AC_TRY_COMPILE(
[#include <gtk/gtk.h>],
[GtkArgSetFunc arg_set_func;],
gtk_found=yes,
gtk_found=no)
AC_MSG_RESULT($gtk_found)

if test $gtk_found = no; then
	AC_MSG_ERROR(Cannot include/link gtk/gdk/glib--check CFLAGS/LDFLAGS)
fi

AC_CHECK_LIB(stroke, stroke_init, STROKE_LIB="-lstroke", STROKE_LIB=no)

if test $STROKE_LIB = no; then
	STROKE_LIB=""
else 
	if test "$no_strokes" = "yes"; then
		echo found libstroke, but disabling strokes
		STROKE_LIB=""
	else 
		AC_DEFINE(HAS_LIBSTROKE)
	fi
fi

LDFLAGS="$saved_ldflags $LDEXTRA"
CFLAGS="$saved_cflags $CFEXTRA"

AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_CHECK_HEADERS(fcntl.h unistd.h strings.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(getcwd strstr vsnprintf snprintf)



#
# Defs for libary symbol files
#
# Expand the prefix variable
if eval "test x$prefix = xNONE"; then
 dprefix=$ac_default_prefix
else
 dprefix=$prefix
fi

gedatopdir=`$GESYMCONFIG --toplevel`
expandgedadatadir=`echo $gedatopdir`

symdir=$gedatopdir/sym
sourcedir=$gedatopdir/source

HOME=`echo $HOME`

# new way without version
gedadatadir=$datadir/$PACKAGE

if eval "test x$opt_rcdir = x"; then

	if eval "test x$prefix = xNONE"; then
		rclocation=$expandgedadatadir
	else
		rclocation=`eval echo $gedadatadir`
	fi

	# this needs to be expanded (NO ${prefix}) since it's used in the code
	AC_DEFINE_UNQUOTED(GEDARCDIR, "$rclocation")

	# this is used in the makefiles so it can have a ${prefix} in it
	gedarcdir=$gedadatadir
else

	# path WAS specified with --with-rcdir
	gedarcdir=$opt_rcdir
	AC_DEFINE_UNQUOTED(GEDARCDIR, "$opt_rcdir")

fi


AC_DEFINE_UNQUOTED(GEDADATADIR, "$gedatopdir")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

# old way of installing data into a version dependant directory
#gedadatadir=$datadir/$PACKAGE-$VERSION
# new way without version
gedadatadir=$datadir/$PACKAGE

AC_SUBST(gedadatadir)
AC_SUBST(gedarcdir)
AC_SUBST(expandgedadatadir)
AC_SUBST(symdir)
AC_SUBST(sourcedir)

AC_SUBST(HOME)
AC_SUBST(VERSION)
AC_SUBST(GTKVERSION)
AC_SUBST(GTK_DEVEL)

AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(STROKE_LIB)
dnl AC_SUBST(TCL_LIB)
AC_SUBST(GUILE_LIB)
AC_SUBST(GUILE_INCLUDE)
AC_SUBST(DL_LIB)
AC_SUBST(GTK)
AC_SUBST(GDK)
AC_SUBST(GLIB)

AC_OUTPUT( 	Makefile \
		src/Makefile \
		include/Makefile \
		scheme/Makefile \
		examples/Makefile \
		lib/Makefile \
		lib/system-gnetlistrc )

