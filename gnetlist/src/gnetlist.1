.TH gEDA 1 "January 24th, 1998" Version 19990124
.SH NAME
gnetlist - GNU Netlist extraction/generation
.SH SYNOPSIS
.B gnetlist
[-i] [-v] [-r rcfilename] [-g guile_procedure] [-o output_filename] schematic1 [... schematicN]
.SH DESCRIPTION
.PP
\fIgnetlist\fP is the netlist extraction/generation program which is part gEDA 
(GNU Electronic Design Automation) toolset.  This program takes a schematic
for its input and outputs a netlist.  As of the writing of this man page
a test netlist format is the only existing output format ("ales-netlist").  

gnetlist depends heavily on guile (a scheme based scripting language).  It 
uses guile to define the output format.  Basically gnetlist reads a schematic,
creates an internal representation of the various connections, and then a
guile script extracts the connections into some netlist format.  

gnetlist is very much so a work in progress.  Currently it supports a
native format (-g geda), a TANGO format (-g tango), a SPICE format
(-g spice), and a Verilog format (-g verilog).  For more information
on the Verilog format see the file README.Verilog in the gnetlist 
distribution directory.

Please read the official (non-existant) documentation on how to use
gnetlist, since this man page just describes the command line arguments
and a few examples on how to run gnetlist.

.SH OPTIONS
.l
\fIgnelist\fP accepts the following options:
.TP 8
.B -q
Quiet mode on.  This mode turns off all warnings/notes/messages. (optional)
.TP 8
.B -v 
Verbose mode on.  This mode gives as much feedback to the user as possible. (optional)
.TP 8
.B -g guile_procedure
Specify the guile procedure which is executed to create the netlist.  
.TP 8
.B -o output_filename
Specify the filename which will contain the netlist generated by gnetlist.  If this option is not specified the default filename is "output.net".
.TP 8
.B -i 
Interactive mode.  After the schematic is read in and parsed and, if specified,
the guile_procedure is execute then go into interactive mode.  Interactive
mode allows the user to execute guile procedures directly. 
.TP 8
schematic1 [... schematicN]
At least one schematic file must be specified.  If multiple schematics are 
specified then they are sequentially read in and parsed with the assumption 
that they are all part of the same design.

.SH EXAMPLES 
These examples assume that you are in the gnetlist directory of the gEDA 
distribution.

gnetlist requires that at least one schematic to be specified on the command line:

.nf
	./gnetlist ../examples/stack_1.sch 
.ad b 

This is not very useful since it does not direct gnetlist to do 
anything.  

Specify a guile procedure name to get gnetlist to output a netlist:

.nf
	./gnetlist -g geda ../examples/stack_1.sch 
.ad b 

The netlist output will be written to a file called "output.net" 
in the current working directory.

You can specify the output filename by using the -o flag:

.nf
	./gnetlist -g geda ../examples/stack_1.sch -o stack.netlist
.ad b 

The spice backend is run against the schematic(s) if you specify 
-g spice and the tango backend is run if you specify -g tango.

To interact with the guile interpreter:

.nf
	./gnetlist -i ../examples/stack_1.sch 
.ad b 

You will get a prompt where you can execute guile procedures.


.SH "ENVIRONMENT"
No environment variables are used.

.SH "AUTHOR"
Ales V. Hvezda and many others

.SH SEE ALSO
.BR geda (1),
.BR gnetlist (1),
.BR gnetlist (1),
.BR gsymbol (1)
.SH COPYRIGHT
Copyright \(co  1999 Ales V Hvezda

This document can be freely redistributed according to the terms of the 
GNU General Public License version 2.0

